name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # List files for debugging purposes
      - name: List files for debugging
        run: ls -R

      # Set up Docker Buildx for building multi-platform images
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Verify the existence of the .env file
      - name: Verify .env file
        run: |
          if [ ! -f .env ]; then
            echo ".env file not found!"
            exit 1
          fi
          cat .env

      # Login to Docker Hub using GitHub Secrets
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build and push the backend Docker image
      - name: Build and push Backend Docker image
        run: |
          docker build -t newzcover/theflique-backend:latest -f ./Dockerfile ./ 
          docker push newzcover/theflique-backend:latest

      # Build and push the frontend Docker image
      - name: Build and push Frontend Docker image
        run: |
          docker build -t newzcover/theflique-frontend:latest -f ./theflique-frontend-main/Dockerfile ./theflique-frontend-main 
          docker push newzcover/theflique-frontend:latest

  deploy:
    needs: build
    runs-on: self-hosted
    steps:
      - name: Prepare Environment
        run: |
          mkdir -p /home/anurag/_work
          mkdir -p /home/anurag/actions-runner
          chmod -R 755 /home/anurag/_work
          chmod -R 755 /home/anurag/actions-runner
          chown -R $USER:$USER /home/anurag/_work
          chown -R $USER:$USER /home/anurag/actions-runner

      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Pull Backend Docker Image
        run: docker pull newzcover/theflique-backend:latest

      - name: Stop and Remove Existing Backend Container
        run: |
          docker stop theflique-backend-container || true
          docker rm theflique-backend-container || true

      - name: Run Backend Container
        run: |
          docker run -d \
            -p 8080:8080 \
            --name theflique-backend-container \
            --env-file .env \
            newzcover/theflique-backend:latest

      # Repeat similar steps for frontend
      - name: Pull Frontend Docker Image
        run: docker pull newzcover/theflique-frontend:latest

      - name: Stop and Remove Existing Frontend Container
        run: |
          docker stop theflique-frontend-container || true
          docker rm theflique-frontend-container || true

      - name: Run Frontend Container
        run: |
          docker run -d \
            -p 3000:3000 \
            --name theflique-frontend-container \
            --env-file .env \
            newzcover/theflique-frontend:latest
